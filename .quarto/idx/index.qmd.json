{"title":"**<b style = 'color : #E18B2A;'>Taller de Investigación: Política Cuantitativa “CUANTIPOL” - UNMSM</b>**","markdown":{"yaml":{"title":"**<b style = 'color : #E18B2A;'>Taller de Investigación: Política Cuantitativa “CUANTIPOL” - UNMSM</b>**","author":"Joel Belsasar","subtitle":"Introducción `ggplot2`","date":"4/06/2023","toc":true,"format":{"revealjs":{"mainfont":"Georgia","smaller":true,"standalone":true,"progress":true,"theme":"night","footer":"<[Cuantipol](https://taller-unmsm-cuantipol-2023.github.io/ggplot2-INTRO/)>"}},"highlight-style":"a11y"},"headingText":"<b style = 'color : #E18B2A;'>Herramientas para la ciencia de datos</b>","containsRefs":false,"markdown":"\n\n\n```{r}\n#| label: fig-ds-whole-game \n#| echo: false\n#| out.width: NULL\n#| fig.align: center\n#| fig-cap: |\n#|   [Whole game: Visualización](https://r4ds.hadley.nz/whole-game#fig-ds-whole-game)\n#| fig-alt: |\n#|   A diagram displaying the data science cycle: Import -> Tidy ->\n#|   Understand  (which has the phases Transform -> Visualize -> Model in a\n#|   cycle) -> Communicate. Surrounding all of these is Program \n#|   Import, Tidy, Transform, and Visualize is highlighted.\n\nknitr::include_graphics(\"./diagrams/whole-game.png\", dpi = 270)\n```\n\n## <b style = 'color : #E18B2A;'>Visualizar... datos</b>\n\nUna visualización de datos efectiva brinda a los usuarios medios intuitivos para...\n\n- explorar y analizar datos de manera interactiva, permitiéndoles\n\n- identificar de manera efectiva patrones interesantes,\n\n- inferir correlaciones y causalidades, y\n\n- brindar soporte a actividades de comprensión.\n\nPero...\n\n- No solo implica aprender a crear un gráfico con una presentación adecuada, sino también comprender cómo abordar los *inputs* necesarios para lo que se necesite comunicar y, así, determinar la forma más efectiva de expresarlo.\n\n## <b style = 'color : #E18B2A;'>Entonces, ¿por qué usar R?</b>\n\n**Reproducibilidad**\n\n- Puedes anotar el scrpit, agregar información extra como títulos, etiquetas y leyendas, y mantener el código de todas las versiones de tus gráficos para saber siempre cómo se crearon.\n\n**Flujo de trabajo unificado**\n\n- R nos permite llevar a cabo muchas tareas sin necesidad de utilizar otros programas.\n\n- Funciones poderosas\n\n  - Se pueden utilizar múltiples paquetes y funciones para lograr una excelente visualización como `base R`, `plotly`, `sjPlot`, `mapview`, `igraph` y en particular nos vamos a enfocar en `ggplot2`.\n\n## <b style = 'color : #E18B2A;'>`ggplot()`</b>\n\n- La lógica que propone ggplot una de los paquetes de la familia tidyverse() es la estratificación\n\n- Si existe un consenso en R, es que ggplot es la librería para graficar.\n\n- En ggplot una capa se encarga de renderizar cada uno de los elementos visuales. Las capas forman una gramática o un conjunto de reglas mediante las cuales R creará los artefactos visuales. \n\n```{r, fig.align = 'center'}\nknitr::include_graphics(\"./diagrams/ggplot2.png\", dpi = 270)\n```\n\n## La gramática en capas de gráficos de [Wickham (2009)](https://vita.had.co.nz/papers/layered-grammar.pdf)\n\n```{r}\n#| label: fig-ds-gglayer \n#| echo: false\n#| out.width: NULL\n#| fig.align: center\n#| fig-cap: |\n#|   Adaptado en [Introduction to data visualisation](https://github.com/QCBSRworkshops/workshop03)\n#| fig-alt: |\n#|   A diagram displaying the data science cycle\n\nknitr::include_graphics(\"./diagrams/gglayers.png\", dpi = 270)\n```\n\n## <b style = 'color : #E18B2A;'>Las capas básicas</b>\n\n**1. La data:**\n\n- Los datos que queremos representar en la grafica deben estar ordenados, es decir, cada fila debe representar una observación y cada columna debe representar una variable. \n\n**2. El mapeo estético:**\n\n- La segunda capa mapea las variables *`X`* y *`Y`* usando la funcion `aes`. Además, puede utilzar otros argumentos como el `color` y vincularlo a una columna diferente del conjunto de datos.  \n  \n```markdown\nggplot(dataframe) + \ngeom_(mapping = aes(x, y), ...) + ...\n```\n\n## <b style = 'color : #E18B2A;'>Dataset: `WorldBank`</b>\n\n- Utilicemos los datos económicos y sociales de diferentes países proporcionados por el Banco Mundial.\n\n- Preprocesamiento de los datos:\n\n```markdown\npacman::p_load(WDI, # Data World Bank\n               ggplot2\n               )\n# Buscar indicadores relacionados con el PIB per cápita:\nindicadores <- WDIsearch(\"GDP per capita\")\n\ndataf <- WDI(country = \"PE\", indicator = c(\"NY.GDP.PCAP.CD\", # PBI\n                                             \"SH.DYN.MORT\"), # Mortalidad\n             start = 2000, end = 2022)\ndataf <- data.frame(dataf)\n\n# Renombrar las variables del dataframe\ncolnames(dataf)[5:6] <- c(\"PIB_Per_Capita\", \"Mortalidad_Infantil\")\n```\n\n```{r}\npacman::p_load(WDI, # Data World Bank\n               ggplot2\n               )\n# Buscar indicadores relacionados con el PIB per cápita:\nindicadores <- WDIsearch(\"GDP per capita\")\n\ndataf <- WDI(country = \"PE\", indicator = c(\"NY.GDP.PCAP.CD\", # PBI\n                                             \"SH.DYN.MORT\"), # Mortalidad\n             start = 2000, end = 2022)\ndataf <- data.frame(dataf)\n\n# Renombrar las variables del dataframe\ncolnames(dataf)[5:6] <- c(\"PIB_Per_Capita\", \"Mortalidad_Infantil\")\n```\n\n## <b style = 'color : #E18B2A;'>Capa: data</b>\n\n```markdown\nggplot(data = dataf)\n```\n```{r}\nggplot(data = dataf)\n# Without any other information, your data will not be visualised.\n```\n\n## <b style = 'color : #E18B2A;'>Capa: Aesthetics</b>\n\n```markdown\nggplot(data = dataf, \n       mapping = aes(x = Mortalidad_Infantil, \n           y = PIB_Per_Capita)) \n```\n```{r, fig.height=5, fig.width=6, fig.align = 'center'}\n# Next layer: aesthetics.\n# Here, we tell R to plot length on the x axis, and depth on the y axis\n# but we still haven't told R how we want these data to be represented...\nggplot(data = dataf, \n       mapping = aes(x = Mortalidad_Infantil, \n           y = PIB_Per_Capita)) \n# See? Our variables are now assigned to the x and y axes, \n# but nothing is plotted yet.\n# We have not yet told `R` *how* we want to represent the data though, so our data will not yet be plotted.\n```\n\n## <b style = 'color : #E18B2A;'>Capa: Geométrica `geom_`</b>\n\n```markdown\nggplot(data = dataf, \n       mapping = aes(x = Mortalidad_Infantil, \n           y = PIB_Per_Capita))  + # Para añadir la siguiente capa debemos utilizar el signo más (`+`)\n  geom_point()\n  \n```\n```{r, fig.height=5, fig.width=6, message = FALSE, warning = FALSE, fig.align = 'center'}\n# Next layer(s): geometric object(s)\nggplot(data = dataf, \n       aes(x = Mortalidad_Infantil, \n           y = PIB_Per_Capita))  + # Use the plus sign to add each additional layer\n  geom_point() # The geom layer determines what style of plot we are using.\n               # geom_point() plots the data as points!\n# Geometric objects, or `geoms`, determine the visual representation \n# of your data. We can begin by plotting our data points as a scatter plot, \n# to see how bill depth and bill length relate to each other.\n\n# Note that you can add several `geoms` in one plot. \n# For example, we could add a line on this plot to show a threshold value, \n# or add a linear regression. For now, let us keep it simple!\n```\n\n## <b style = 'color : #E18B2A;'>Capas: Coordinates, and themes</b>\n\n```markdown\nggplot(data = dataf, \n       mapping = aes(x = Mortalidad_Infantil, y = PIB_Per_Capita)) + \n       geom_point() + \n       coord_trans(x = \"log10\", y = \"log10\") + \n       theme_classic()\n```\n```{r,fig.height=5, fig.width=6, warning = FALSE, fig.align = 'center'}\n# Next layer(s): customizations!\n# Facets split a plot into separate windows according to some category in the data.\nggplot(data = dataf, \n       aes(x = Mortalidad_Infantil, \n           y = PIB_Per_Capita)) +\n  geom_point() + \n  coord_trans(x = \"log10\", y = \"log10\") + \n       theme_classic()\n\n# Now that the dataset is plotted, we can customize the plot to clarify the \n# message, or to add more information. Facets are a popular way of dividing \n# a plot into several windows according to some category in the data, \n# to visually differentiate groupings. We can explore this plot differently \n# if we use `facet_wrap()` to create separate \"facets\" according to our species groupings:\n```\n\n## <b style = 'color : #E18B2A;'>En suma, en un solo fragmento de código:</b>\n\n```markdown\n# Crear la gráfica utilizando ggplot2\nggplot(dataf,                         # Data\n       aes(x = Mortalidad_Infantil,   # Your X-value\n           y = PIB_Per_Capita,        # Your Y-value\n           color = \"\")                # Podemos pintar con otra variable\n       ) +                            # Aesthetics\n  geom_point(size = 5, alpha = 0.8) + # Point\n  geom_smooth(method = \"lm\") +        # Linear regression\n  labs(title = \"Relación entre Tasa de Mortalidad Infantil y PIB per cápita\", # Title\n       x = \"Tasa de Mortalidad Infantil\", y = \"PIB per cápita\", col = \"\") +\n  theme_classic() + # apply a clean theme\n  theme(title = element_text(size = 18, face = \"bold\"),\n      text = element_text(size = 16))\n```\n\n## <b style = 'color : #E18B2A;'>En suma, en un solo fragmento de código: </b>\n\n```{r, fig.height=7, fig.width=9, results='hide', message=FALSE, warning=FALSE, fig.align = 'center'}\n# Crear la gráfica utilizando ggplot2\nggplot(data = dataf,               # Data\n       aes(x = Mortalidad_Infantil,        # Your X-value\n           y = PIB_Per_Capita,         # Your Y-value\n           color = \"\")                # Podemos pintar con otra variable\n       ) +                            # Aesthetics\n  geom_point(size = 5, alpha = 0.8) + # Point\n  geom_smooth(method = \"lm\") +        # Linear regression\n  labs(title = \"Relación entre la tasa de Mortalidad Infantil y\\n el PBI per cápita\", # Title\n       x = \"Tasa de Mortalidad Infantil\",\n       y = \"PBI per cápita\",\n       col = \"\") +\n  theme_classic() + # apply a clean theme\n  theme(title = element_text(size = 18, face = \"bold\"),\n      text = element_text(size = 16))\n```\n\n## Bibliografía:\n\nWickham, H., Navarro, D., & Lin, T. (2009). *ggplot2. Elegant Graphics for Data Analysis * (3ª ed.). Springer. [https://ggplot2-book.org/](https://ggplot2-book.org/)\n\nWickham, H. (2010). *A Layered Grammar of Graphics*. Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28. [https://vita.had.co.nz/papers/layered-grammar.pdf](https://vita.had.co.nz/papers/layered-grammar.pdf)\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). *R for Data Science. Import, Tidy, Transform, Visualize, and Model Data* (2ª ed.). O'Reilly Media, Inc. [https://r4ds.hadley.nz/](https://r4ds.hadley.nz/)\n\nIkakis, N. (2018). Big data visualization tools.\" arXiv preprint. [arXiv:1801.08336](https://arxiv.org/abs/1801.08336)\n\n\n## Más recursos:\n\n- [Revealjs](https://quarto.org/docs/presentations/revealjs/)\n\n- [Advanced Reveal](https://quarto.org/docs/presentations/revealjs/advanced.html)\n\n- [Revealjs Options](https://quarto.org/docs/reference/formats/presentations/revealjs.html)\n\n- [Revealjs Plugins](https://quarto.org/docs/extensions/revealjs.html)","srcMarkdownNoYaml":"\n\n## <b style = 'color : #E18B2A;'>Herramientas para la ciencia de datos</b>\n\n```{r}\n#| label: fig-ds-whole-game \n#| echo: false\n#| out.width: NULL\n#| fig.align: center\n#| fig-cap: |\n#|   [Whole game: Visualización](https://r4ds.hadley.nz/whole-game#fig-ds-whole-game)\n#| fig-alt: |\n#|   A diagram displaying the data science cycle: Import -> Tidy ->\n#|   Understand  (which has the phases Transform -> Visualize -> Model in a\n#|   cycle) -> Communicate. Surrounding all of these is Program \n#|   Import, Tidy, Transform, and Visualize is highlighted.\n\nknitr::include_graphics(\"./diagrams/whole-game.png\", dpi = 270)\n```\n\n## <b style = 'color : #E18B2A;'>Visualizar... datos</b>\n\nUna visualización de datos efectiva brinda a los usuarios medios intuitivos para...\n\n- explorar y analizar datos de manera interactiva, permitiéndoles\n\n- identificar de manera efectiva patrones interesantes,\n\n- inferir correlaciones y causalidades, y\n\n- brindar soporte a actividades de comprensión.\n\nPero...\n\n- No solo implica aprender a crear un gráfico con una presentación adecuada, sino también comprender cómo abordar los *inputs* necesarios para lo que se necesite comunicar y, así, determinar la forma más efectiva de expresarlo.\n\n## <b style = 'color : #E18B2A;'>Entonces, ¿por qué usar R?</b>\n\n**Reproducibilidad**\n\n- Puedes anotar el scrpit, agregar información extra como títulos, etiquetas y leyendas, y mantener el código de todas las versiones de tus gráficos para saber siempre cómo se crearon.\n\n**Flujo de trabajo unificado**\n\n- R nos permite llevar a cabo muchas tareas sin necesidad de utilizar otros programas.\n\n- Funciones poderosas\n\n  - Se pueden utilizar múltiples paquetes y funciones para lograr una excelente visualización como `base R`, `plotly`, `sjPlot`, `mapview`, `igraph` y en particular nos vamos a enfocar en `ggplot2`.\n\n## <b style = 'color : #E18B2A;'>`ggplot()`</b>\n\n- La lógica que propone ggplot una de los paquetes de la familia tidyverse() es la estratificación\n\n- Si existe un consenso en R, es que ggplot es la librería para graficar.\n\n- En ggplot una capa se encarga de renderizar cada uno de los elementos visuales. Las capas forman una gramática o un conjunto de reglas mediante las cuales R creará los artefactos visuales. \n\n```{r, fig.align = 'center'}\nknitr::include_graphics(\"./diagrams/ggplot2.png\", dpi = 270)\n```\n\n## La gramática en capas de gráficos de [Wickham (2009)](https://vita.had.co.nz/papers/layered-grammar.pdf)\n\n```{r}\n#| label: fig-ds-gglayer \n#| echo: false\n#| out.width: NULL\n#| fig.align: center\n#| fig-cap: |\n#|   Adaptado en [Introduction to data visualisation](https://github.com/QCBSRworkshops/workshop03)\n#| fig-alt: |\n#|   A diagram displaying the data science cycle\n\nknitr::include_graphics(\"./diagrams/gglayers.png\", dpi = 270)\n```\n\n## <b style = 'color : #E18B2A;'>Las capas básicas</b>\n\n**1. La data:**\n\n- Los datos que queremos representar en la grafica deben estar ordenados, es decir, cada fila debe representar una observación y cada columna debe representar una variable. \n\n**2. El mapeo estético:**\n\n- La segunda capa mapea las variables *`X`* y *`Y`* usando la funcion `aes`. Además, puede utilzar otros argumentos como el `color` y vincularlo a una columna diferente del conjunto de datos.  \n  \n```markdown\nggplot(dataframe) + \ngeom_(mapping = aes(x, y), ...) + ...\n```\n\n## <b style = 'color : #E18B2A;'>Dataset: `WorldBank`</b>\n\n- Utilicemos los datos económicos y sociales de diferentes países proporcionados por el Banco Mundial.\n\n- Preprocesamiento de los datos:\n\n```markdown\npacman::p_load(WDI, # Data World Bank\n               ggplot2\n               )\n# Buscar indicadores relacionados con el PIB per cápita:\nindicadores <- WDIsearch(\"GDP per capita\")\n\ndataf <- WDI(country = \"PE\", indicator = c(\"NY.GDP.PCAP.CD\", # PBI\n                                             \"SH.DYN.MORT\"), # Mortalidad\n             start = 2000, end = 2022)\ndataf <- data.frame(dataf)\n\n# Renombrar las variables del dataframe\ncolnames(dataf)[5:6] <- c(\"PIB_Per_Capita\", \"Mortalidad_Infantil\")\n```\n\n```{r}\npacman::p_load(WDI, # Data World Bank\n               ggplot2\n               )\n# Buscar indicadores relacionados con el PIB per cápita:\nindicadores <- WDIsearch(\"GDP per capita\")\n\ndataf <- WDI(country = \"PE\", indicator = c(\"NY.GDP.PCAP.CD\", # PBI\n                                             \"SH.DYN.MORT\"), # Mortalidad\n             start = 2000, end = 2022)\ndataf <- data.frame(dataf)\n\n# Renombrar las variables del dataframe\ncolnames(dataf)[5:6] <- c(\"PIB_Per_Capita\", \"Mortalidad_Infantil\")\n```\n\n## <b style = 'color : #E18B2A;'>Capa: data</b>\n\n```markdown\nggplot(data = dataf)\n```\n```{r}\nggplot(data = dataf)\n# Without any other information, your data will not be visualised.\n```\n\n## <b style = 'color : #E18B2A;'>Capa: Aesthetics</b>\n\n```markdown\nggplot(data = dataf, \n       mapping = aes(x = Mortalidad_Infantil, \n           y = PIB_Per_Capita)) \n```\n```{r, fig.height=5, fig.width=6, fig.align = 'center'}\n# Next layer: aesthetics.\n# Here, we tell R to plot length on the x axis, and depth on the y axis\n# but we still haven't told R how we want these data to be represented...\nggplot(data = dataf, \n       mapping = aes(x = Mortalidad_Infantil, \n           y = PIB_Per_Capita)) \n# See? Our variables are now assigned to the x and y axes, \n# but nothing is plotted yet.\n# We have not yet told `R` *how* we want to represent the data though, so our data will not yet be plotted.\n```\n\n## <b style = 'color : #E18B2A;'>Capa: Geométrica `geom_`</b>\n\n```markdown\nggplot(data = dataf, \n       mapping = aes(x = Mortalidad_Infantil, \n           y = PIB_Per_Capita))  + # Para añadir la siguiente capa debemos utilizar el signo más (`+`)\n  geom_point()\n  \n```\n```{r, fig.height=5, fig.width=6, message = FALSE, warning = FALSE, fig.align = 'center'}\n# Next layer(s): geometric object(s)\nggplot(data = dataf, \n       aes(x = Mortalidad_Infantil, \n           y = PIB_Per_Capita))  + # Use the plus sign to add each additional layer\n  geom_point() # The geom layer determines what style of plot we are using.\n               # geom_point() plots the data as points!\n# Geometric objects, or `geoms`, determine the visual representation \n# of your data. We can begin by plotting our data points as a scatter plot, \n# to see how bill depth and bill length relate to each other.\n\n# Note that you can add several `geoms` in one plot. \n# For example, we could add a line on this plot to show a threshold value, \n# or add a linear regression. For now, let us keep it simple!\n```\n\n## <b style = 'color : #E18B2A;'>Capas: Coordinates, and themes</b>\n\n```markdown\nggplot(data = dataf, \n       mapping = aes(x = Mortalidad_Infantil, y = PIB_Per_Capita)) + \n       geom_point() + \n       coord_trans(x = \"log10\", y = \"log10\") + \n       theme_classic()\n```\n```{r,fig.height=5, fig.width=6, warning = FALSE, fig.align = 'center'}\n# Next layer(s): customizations!\n# Facets split a plot into separate windows according to some category in the data.\nggplot(data = dataf, \n       aes(x = Mortalidad_Infantil, \n           y = PIB_Per_Capita)) +\n  geom_point() + \n  coord_trans(x = \"log10\", y = \"log10\") + \n       theme_classic()\n\n# Now that the dataset is plotted, we can customize the plot to clarify the \n# message, or to add more information. Facets are a popular way of dividing \n# a plot into several windows according to some category in the data, \n# to visually differentiate groupings. We can explore this plot differently \n# if we use `facet_wrap()` to create separate \"facets\" according to our species groupings:\n```\n\n## <b style = 'color : #E18B2A;'>En suma, en un solo fragmento de código:</b>\n\n```markdown\n# Crear la gráfica utilizando ggplot2\nggplot(dataf,                         # Data\n       aes(x = Mortalidad_Infantil,   # Your X-value\n           y = PIB_Per_Capita,        # Your Y-value\n           color = \"\")                # Podemos pintar con otra variable\n       ) +                            # Aesthetics\n  geom_point(size = 5, alpha = 0.8) + # Point\n  geom_smooth(method = \"lm\") +        # Linear regression\n  labs(title = \"Relación entre Tasa de Mortalidad Infantil y PIB per cápita\", # Title\n       x = \"Tasa de Mortalidad Infantil\", y = \"PIB per cápita\", col = \"\") +\n  theme_classic() + # apply a clean theme\n  theme(title = element_text(size = 18, face = \"bold\"),\n      text = element_text(size = 16))\n```\n\n## <b style = 'color : #E18B2A;'>En suma, en un solo fragmento de código: </b>\n\n```{r, fig.height=7, fig.width=9, results='hide', message=FALSE, warning=FALSE, fig.align = 'center'}\n# Crear la gráfica utilizando ggplot2\nggplot(data = dataf,               # Data\n       aes(x = Mortalidad_Infantil,        # Your X-value\n           y = PIB_Per_Capita,         # Your Y-value\n           color = \"\")                # Podemos pintar con otra variable\n       ) +                            # Aesthetics\n  geom_point(size = 5, alpha = 0.8) + # Point\n  geom_smooth(method = \"lm\") +        # Linear regression\n  labs(title = \"Relación entre la tasa de Mortalidad Infantil y\\n el PBI per cápita\", # Title\n       x = \"Tasa de Mortalidad Infantil\",\n       y = \"PBI per cápita\",\n       col = \"\") +\n  theme_classic() + # apply a clean theme\n  theme(title = element_text(size = 18, face = \"bold\"),\n      text = element_text(size = 16))\n```\n\n## Bibliografía:\n\nWickham, H., Navarro, D., & Lin, T. (2009). *ggplot2. Elegant Graphics for Data Analysis * (3ª ed.). Springer. [https://ggplot2-book.org/](https://ggplot2-book.org/)\n\nWickham, H. (2010). *A Layered Grammar of Graphics*. Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28. [https://vita.had.co.nz/papers/layered-grammar.pdf](https://vita.had.co.nz/papers/layered-grammar.pdf)\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). *R for Data Science. Import, Tidy, Transform, Visualize, and Model Data* (2ª ed.). O'Reilly Media, Inc. [https://r4ds.hadley.nz/](https://r4ds.hadley.nz/)\n\nIkakis, N. (2018). Big data visualization tools.\" arXiv preprint. [arXiv:1801.08336](https://arxiv.org/abs/1801.08336)\n\n\n## Más recursos:\n\n- [Revealjs](https://quarto.org/docs/presentations/revealjs/)\n\n- [Advanced Reveal](https://quarto.org/docs/presentations/revealjs/advanced.html)\n\n- [Revealjs Options](https://quarto.org/docs/reference/formats/presentations/revealjs.html)\n\n- [Revealjs Plugins](https://quarto.org/docs/extensions/revealjs.html)"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","toc":true,"highlight-style":"a11y","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.3.450","auto-stretch":true,"title":"**<b style = 'color : #E18B2A;'>Taller de Investigación: Política Cuantitativa “CUANTIPOL” - UNMSM</b>**","author":"Joel Belsasar","subtitle":"Introducción `ggplot2`","date":"4/06/2023","mainfont":"Georgia","smaller":true,"progress":true,"theme":"night","footer":"<[Cuantipol](https://taller-unmsm-cuantipol-2023.github.io/ggplot2-INTRO/)>"}}},"projectFormats":["revealjs"]}