{
  "hash": "51444a57f81ae6daac28fe2beb0e99ab",
  "result": {
    "markdown": "---\ntitle: \"**Taller de Investigación: Política Cuantitativa “CUANTIPOL” - UNMSM**\"\nauthor:  Joel Belsasar\nsubtitle: Introducción `ggplot2`\ndate: 4/06/2023\ntoc: true\nformat:\n  revealjs:\n    smaller: true\n    standalone: true\n    theme: default\n    progress: true\n    footer: <[Cuantipol](https://taller-unmsm-cuantipol-2023.github.io/ggplot2-INTRO/)>\nincremental: false\nhighlight-style: a11y\n---\n\n\n## **Herramientas para la ciencia de datos**\n\n\n::: {.cell}\n::: {.cell-output-display}\n![[Whole game: Visualización](https://r4ds.hadley.nz/whole-game#fig-ds-whole-game)\n](./diagrams/whole-game.png){#fig-ds-whole-game fig-alt='A diagram displaying the data science cycle: Import -> Tidy ->\nUnderstand  (which has the phases Transform -> Visualize -> Model in a\ncycle) -> Communicate. Surrounding all of these is Program\nImport, Tidy, Transform, and Visualize is highlighted.' width=535}\n:::\n:::\n\n\n## **Visualizar... datos**\n\n*- Generar visualizaciones implica comunicar una idea, una información, un dato de manera clara y lo mas precisa posible.*\n\nUna visualización de datos efectiva brinda a los usuarios medios intuitivos para...\n\n- explorar y analizar datos de manera interactiva, permitiéndoles\n\n- identificar de manera efectiva patrones interesantes,\n\n- inferir correlaciones y causalidades, y\n\n- brindar soporte a actividades de comprensión.\n\nPero...\n\n- No solo implica aprender a crear un gráfico con una presentación adecuada, sino también comprender cómo abordar los *inputs* necesarios para lo que se necesite comunicar y, así, determinar la forma más efectiva de expresarlo.\n\n## **Entonces, ¿por qué usar R?**\n\n**Reproducibilidad**\n\n- Puedes anotar el scrpit, agregar información extra como títulos, etiquetas y leyendas, y mantener el código de todas las versiones de tus gráficos para saber siempre cómo se crearon.\n\n**Flujo de trabajo unificado**\n\n- R nos permite llevar a cabo muchas tareas sin necesidad de utilizar otros programas.\n\n- Funciones poderosas\n\n  - Se pueden utilizar múltiples paquetes y funciones para lograr una excelente visualización como `base R`, `plotly`, `sjPlot`, `mapview`, `igraph` y en particular nos vamos a enfocar en `ggplot2`.\n\n## **`ggplot()`**\n\n- La lógica que propone ggplot una de los paquetes de la familia tidyverse() es la estratificación\n\n- Si existe un consenso en R, es que ggplot es la librería para graficar.\n\n\n## La gramática en capas de gráficos de [Wickham (2009)](https://vita.had.co.nz/papers/layered-grammar.pdf)\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Adaptado de [Introduction to data visualisation](https://github.com/QCBSRworkshops/workshop03)\n](./diagrams/gglayers.png){#fig-ds-gglayer fig-alt='A diagram displaying the data science cycle' width=683}\n:::\n:::\n\n\n##\n\n\n\n\n\n\n\n## Bibliografía:\n\nWickham, H., Navarro, D., & Lin, T. (2009). *ggplot2. Elegant Graphics for Data Analysis * (3ª ed.). Springer. [https://ggplot2-book.org/](https://ggplot2-book.org/)\n\nWickham, H. (2010). *A Layered Grammar of Graphics*. Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28. [https://vita.had.co.nz/papers/layered-grammar.pdf](https://vita.had.co.nz/papers/layered-grammar.pdf)\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). *R for Data Science. Import, Tidy, Transform, Visualize, and Model Data* (2ª ed.). O'Reilly Media, Inc. [https://r4ds.hadley.nz/](https://r4ds.hadley.nz/)\n\n\nIkakis, N. (2018). Big data visualization tools.\" arXiv preprint. [arXiv:1801.08336](https://arxiv.org/abs/1801.08336)\n\n\n##\nCrear presentaciones (PPT):\n\n[Revealjs](https://quarto.org/docs/presentations/revealjs/)\n\n[Advanced Reveal](https://quarto.org/docs/presentations/revealjs/advanced.html)\n\n[Revealjs Options](https://quarto.org/docs/reference/formats/presentations/revealjs.html)\n\n[Revealjs Plugins](https://quarto.org/docs/extensions/revealjs.html)\n\n\n[]()\n[]()\n[]()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}